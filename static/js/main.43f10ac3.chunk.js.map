{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","symbols","App","useState","expressionDisplay","setDisplay","answer","setAnser","countDecimal","display","event","length","includes","replace","test","prev","calculate","theExpression","eval","slice","displayClean","spliceDisplay","classes","className","container","direction","justify","alignItems","style","height","fontSize","minHeight","item","xs","type","value","placeholder","id","variant","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43f10ac3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport \"./app.css\";\nimport {\n  Button,\n  Grid,\n  Paper,\n  makeStyles,\n  Tooltip,\n  Divider,\n  TextField,\n  Input,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst symbols = [\"*\", \"+\", \"/\", \"-\"];\n\nfunction App() {\n  const [expressionDisplay, setDisplay] = useState(\"\");\n  const [answer, setAnser] = useState(0);\n  let countDecimal = 0;\n\n  function display(event) {\n    if (event)\n      if (expressionDisplay[expressionDisplay.length - 1] === \"=\") {\n        // let dis = expressionDisplay.match(/./g).length;\n        // if (expressionDisplay !== null) {\n        //   if (dis === 1) {\n        //     if (event === \".\") {\n        //       return setDisplay(expressionDisplay);\n        //     }\n        //   }\n        // }\n\n        if (symbols.includes(event) === true) {\n          const withoutEqual = expressionDisplay;\n          // console.log(\"are we in?\", withoutEqual);\n          return setDisplay(withoutEqual.replace(\"=\", event));\n        }\n        return setDisplay(event);\n      }\n    if (\n      symbols.includes(expressionDisplay[0]) &&\n      symbols.includes(event) &&\n      expressionDisplay.length === 1\n    ) {\n      // console.log(\"TEST\");\n      return setDisplay(event);\n    }\n    if (/[0-9]/.test(event)) {\n      // console.log(\"TEST1\");\n      return setDisplay((prev) => prev + event);\n    } else if (\n      /[.]/.test(expressionDisplay[expressionDisplay.length - 1]) !== true &&\n      event === \".\"\n    ) {\n      // console.log(\"TEST2\");\n      return setDisplay((prev) => prev + event);\n    } else if (\n      /[/+*]/.test(expressionDisplay[expressionDisplay.length - 1]) === true &&\n      event === \"-\"\n    ) {\n      if (expressionDisplay[expressionDisplay.length - 1] !== \"-\") {\n        // console.log(\"TEST3\");\n        return setDisplay((prev) => prev + \"-\");\n      }\n    } else {\n      if (\n        [\"+\", \"-\", \"*\", \"/\", \".\"].includes(\n          expressionDisplay[expressionDisplay.length - 1]\n        ) === false\n      ) {\n        // console.log(\"TEST4\");\n        return setDisplay((prev) => prev + event);\n      }\n    }\n  }\n  function calculate() {\n    const theExpression = expressionDisplay;\n    if (symbols.includes(expressionDisplay[expressionDisplay.length - 1])) {\n      return setAnser(eval(theExpression.slice(0, theExpression.length - 1)));\n    }\n    setAnser(eval(expressionDisplay));\n    setDisplay((prev) => prev + \"=\");\n  }\n\n  function displayClean(event) {\n    if (event === \"CA\") {\n      return setDisplay(\"\");\n    }\n    let spliceDisplay = expressionDisplay;\n    return setDisplay(spliceDisplay.slice(0, spliceDisplay.length - 1));\n  }\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ height: \"100vh\" }}\n      >\n        <h3 style={{ color: \"#3A3B3C\", fontSize: \"1.5rem\" }}>\n          Javascript Calculator\n        </h3>\n        <Paper className={classes.paper} style={{ minHeight: \"50%\" }}>\n          <Grid item xs={12} style={{ textAlign: \"center\" }}>\n            <div className=\"display\" style={{ textAlign: \"right\" }}>\n              <Input\n                type=\"text\"\n                value={expressionDisplay}\n                placeholder=\"0\"\n              ></Input>\n              <div className=\"calculated\">{answer}</div>\n            </div>\n          </Grid>\n          <div id=\"buttons\">\n            <Button variant=\"outlined\" onClick={() => display(\"0\")} id=\"zero\">\n              0\n            </Button>\n            <Button variant=\"outlined\" onClick={() => display(\"1\")} id=\"one\">\n              1\n            </Button>\n            <Button variant=\"outlined\" onClick={() => display(\"2\")} id=\"two\">\n              2\n            </Button>\n            <Button variant=\"outlined\" onClick={() => display(\"3\")} id=\"three\">\n              3\n            </Button>\n            <Button variant=\"outlined\" onClick={() => display(\"4\")} id=\"four\">\n              4\n            </Button>\n            <Button variant=\"outlined\" onClick={() => display(\"5\")} id=\"five\">\n              5\n            </Button>\n            <Button variant=\"outlined\" onClick={() => display(\"6\")} id=\"six\">\n              6\n            </Button>\n            <Button variant=\"outlined\" onClick={() => display(\"7\")} id=\"seven\">\n              7\n            </Button>\n            <Button variant=\"outlined\" onClick={() => display(\"8\")} id=\"eight\">\n              8\n            </Button>\n            <Button variant=\"outlined\" onClick={() => display(\"9\")} id=\"nine\">\n              9\n            </Button>\n            <Button variant=\"outlined\" onClick={() => display(\"+\")} id=\"add\">\n              +\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => display(\"-\")}\n              id=\"subtract\"\n            >\n              -\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => display(\"*\")}\n              id=\"multiply\"\n            >\n              *\n            </Button>\n            <Button variant=\"outlined\" onClick={() => display(\"/\")} id=\"divide\">\n              /\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => display(\".\")}\n              id=\"decimal\"\n            >\n              .\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => displayClean(\"CA\")}\n              id=\"clearAll\"\n              color=\"secondary\"\n            >\n              CA\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => displayClean(\"C\")}\n              id=\"clear\"\n              color=\"secondary\"\n            >\n              C\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => calculate(\"=\")}\n              id=\"result\"\n            >\n              =\n            </Button>\n          </div>\n        </Paper>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}